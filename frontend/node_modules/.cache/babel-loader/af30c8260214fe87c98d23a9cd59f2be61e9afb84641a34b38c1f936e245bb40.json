{"ast":null,"code":"import axios from'axios';import toast from'react-hot-toast';class ApiClient{constructor(){this.client=void 0;this.getToken=null;this.client=axios.create({baseURL:process.env.REACT_APP_API_URL||'http://localhost:4000/api',timeout:30000,headers:{'Content-Type':'application/json'}});// Request interceptor to add auth token\nthis.client.interceptors.request.use(async config=>{if(this.getToken){const token=await this.getToken();if(token){config.headers.Authorization=\"Bearer \".concat(token);}}return config;},error=>{return Promise.reject(error);});// Response interceptor for error handling\nthis.client.interceptors.response.use(response=>response,error=>{this.handleError(error);return Promise.reject(error);});}// Method to set the token getter function\nsetTokenGetter(getToken){this.getToken=getToken;}handleError(error){if(error.response){const{status,data}=error.response;switch(status){case 401:toast.error('Authentication required. Please log in.');break;case 403:toast.error('Access denied. You do not have permission.');break;case 404:toast.error('Resource not found.');break;case 422:toast.error(data.error||'Validation error');break;case 500:toast.error('Server error. Please try again later.');break;default:toast.error(data.error||'An unexpected error occurred');}}else if(error.request){toast.error('Network error. Please check your connection.');}else{toast.error('An unexpected error occurred');}}// Health Check\nasync getHealth(){const response=await this.client.get('/health');return response.data;}// Profile API\nasync getProfile(){const response=await this.client.get('/profile');return response.data;}async updateProfile(profile){const response=await this.client.put('/profile',profile);return response.data;}async uploadProfilePicture(file){const formData=new FormData();formData.append('profilePicture',file);const response=await this.client.post('/profile/picture',formData,{headers:{'Content-Type':'multipart/form-data'}});return response.data;}async uploadResume(file){const formData=new FormData();formData.append('resumeFile',file);const response=await this.client.post('/profile/resume',formData,{headers:{'Content-Type':'multipart/form-data'}});return response.data;}// Recommendation API\nasync createRecommendation(ikigaiData){const response=await this.client.post('/recommendation',ikigaiData);return response.data;}// Job Search API\nasync searchJobs(searchData){const response=await this.client.post('/jobs/search',searchData);return response.data;}// Roadmap API\nasync createRoadmap(jobDetails){const response=await this.client.post('/roadmaps',jobDetails);return response.data;}async updateRoadmapTask(roadmapId,taskUpdate){const response=await this.client.put(\"/roadmaps/\".concat(roadmapId,\"/task\"),taskUpdate);return response.data;}// Chat API\nasync getChatSessions(){const response=await this.client.get('/chat/sessions');return response.data;}async createChatSession(){const response=await this.client.post('/chat/sessions');return response.data;}async getChatSession(sessionId){const response=await this.client.get(\"/chat/sessions/\".concat(sessionId));return response.data;}async sendChatMessage(sessionId,message){const response=await this.client.post(\"/chat/sessions/\".concat(sessionId,\"/messages\"),message);return response.data;}// Knowledge API\nasync uploadKnowledgeDocument(file){const formData=new FormData();formData.append('document',file);const response=await this.client.post('/knowledge/upload',formData,{headers:{'Content-Type':'multipart/form-data'}});return response.data;}}// Create and export a singleton instance\nexport const apiClient=new ApiClient();// Export individual methods for convenience\nexport const{getHealth,getProfile,updateProfile,uploadProfilePicture,uploadResume,createRecommendation,searchJobs,createRoadmap,updateRoadmapTask,getChatSessions,createChatSession,getChatSession,sendChatMessage,uploadKnowledgeDocument}=apiClient;","map":{"version":3,"names":["axios","toast","ApiClient","constructor","client","getToken","create","baseURL","process","env","REACT_APP_API_URL","timeout","headers","interceptors","request","use","config","token","Authorization","concat","error","Promise","reject","response","handleError","setTokenGetter","status","data","getHealth","get","getProfile","updateProfile","profile","put","uploadProfilePicture","file","formData","FormData","append","post","uploadResume","createRecommendation","ikigaiData","searchJobs","searchData","createRoadmap","jobDetails","updateRoadmapTask","roadmapId","taskUpdate","getChatSessions","createChatSession","getChatSession","sessionId","sendChatMessage","message","uploadKnowledgeDocument","apiClient"],"sources":["D:/pooja/projects/gen ai/frontend/src/services/api.ts"],"sourcesContent":["import axios, { AxiosInstance, AxiosRequestConfig, AxiosResponse } from 'axios';\r\nimport toast from 'react-hot-toast';\r\nimport {\r\n  IkigaiInput,\r\n  RecommendationResponse,\r\n  UserProfile,\r\n  ProfileUploadResponse,\r\n  JobSearchForm,\r\n  JobSearchOutput,\r\n  JobDetails,\r\n  RoadmapUpdate,\r\n  ChatSession,\r\n  ChatMessage,\r\n  ChatInput,\r\n  ChatResponse,\r\n  SessionResponse,\r\n  HealthStatus,\r\n  ApiResponse,\r\n} from '../types';\r\n\r\nclass ApiClient {\r\n  private client: AxiosInstance;\r\n  private getToken: (() => Promise<string | null>) | null = null;\r\n\r\n  constructor() {\r\n    this.client = axios.create({\r\n      baseURL: process.env.REACT_APP_API_URL || 'http://localhost:4000/api',\r\n      timeout: 30000,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n\r\n    // Request interceptor to add auth token\r\n    this.client.interceptors.request.use(\r\n      async (config) => {\r\n        if (this.getToken) {\r\n          const token = await this.getToken();\r\n          if (token) {\r\n            config.headers.Authorization = `Bearer ${token}`;\r\n          }\r\n        }\r\n        return config;\r\n      },\r\n      (error) => {\r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n\r\n    // Response interceptor for error handling\r\n    this.client.interceptors.response.use(\r\n      (response) => response,\r\n      (error) => {\r\n        this.handleError(error);\r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  // Method to set the token getter function\r\n  setTokenGetter(getToken: () => Promise<string | null>) {\r\n    this.getToken = getToken;\r\n  }\r\n\r\n  private handleError(error: any) {\r\n    if (error.response) {\r\n      const { status, data } = error.response;\r\n      \r\n      switch (status) {\r\n        case 401:\r\n          toast.error('Authentication required. Please log in.');\r\n          break;\r\n        case 403:\r\n          toast.error('Access denied. You do not have permission.');\r\n          break;\r\n        case 404:\r\n          toast.error('Resource not found.');\r\n          break;\r\n        case 422:\r\n          toast.error(data.error || 'Validation error');\r\n          break;\r\n        case 500:\r\n          toast.error('Server error. Please try again later.');\r\n          break;\r\n        default:\r\n          toast.error(data.error || 'An unexpected error occurred');\r\n      }\r\n    } else if (error.request) {\r\n      toast.error('Network error. Please check your connection.');\r\n    } else {\r\n      toast.error('An unexpected error occurred');\r\n    }\r\n  }\r\n\r\n  // Health Check\r\n  async getHealth(): Promise<HealthStatus> {\r\n    const response = await this.client.get<HealthStatus>('/health');\r\n    return response.data;\r\n  }\r\n\r\n  // Profile API\r\n  async getProfile(): Promise<UserProfile> {\r\n    const response = await this.client.get<UserProfile>('/profile');\r\n    return response.data;\r\n  }\r\n\r\n  async updateProfile(profile: Partial<UserProfile>): Promise<UserProfile> {\r\n    const response = await this.client.put<UserProfile>('/profile', profile);\r\n    return response.data;\r\n  }\r\n\r\n  async uploadProfilePicture(file: File): Promise<ProfileUploadResponse> {\r\n    const formData = new FormData();\r\n    formData.append('profilePicture', file);\r\n    \r\n    const response = await this.client.post<ProfileUploadResponse>(\r\n      '/profile/picture',\r\n      formData,\r\n      {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  }\r\n\r\n  async uploadResume(file: File): Promise<ProfileUploadResponse> {\r\n    const formData = new FormData();\r\n    formData.append('resumeFile', file);\r\n    \r\n    const response = await this.client.post<ProfileUploadResponse>(\r\n      '/profile/resume',\r\n      formData,\r\n      {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  }\r\n\r\n  // Recommendation API\r\n  async createRecommendation(ikigaiData: IkigaiInput): Promise<RecommendationResponse> {\r\n    const response = await this.client.post<RecommendationResponse>('/recommendation', ikigaiData);\r\n    return response.data;\r\n  }\r\n\r\n  // Job Search API\r\n  async searchJobs(searchData: JobSearchForm): Promise<JobSearchOutput> {\r\n    const response = await this.client.post<JobSearchOutput>('/jobs/search', searchData);\r\n    return response.data;\r\n  }\r\n\r\n  // Roadmap API\r\n  async createRoadmap(jobDetails: JobDetails): Promise<RoadmapUpdate> {\r\n    const response = await this.client.post<RoadmapUpdate>('/roadmaps', jobDetails);\r\n    return response.data;\r\n  }\r\n\r\n  async updateRoadmapTask(roadmapId: string, taskUpdate: RoadmapUpdate): Promise<{ message: string }> {\r\n    const response = await this.client.put<{ message: string }>(\r\n      `/roadmaps/${roadmapId}/task`,\r\n      taskUpdate\r\n    );\r\n    return response.data;\r\n  }\r\n\r\n  // Chat API\r\n  async getChatSessions(): Promise<ChatSession[]> {\r\n    const response = await this.client.get<ChatSession[]>('/chat/sessions');\r\n    return response.data;\r\n  }\r\n\r\n  async createChatSession(): Promise<SessionResponse> {\r\n    const response = await this.client.post<SessionResponse>('/chat/sessions');\r\n    return response.data;\r\n  }\r\n\r\n  async getChatSession(sessionId: string): Promise<ChatMessage[]> {\r\n    const response = await this.client.get<ChatMessage[]>(`/chat/sessions/${sessionId}`);\r\n    return response.data;\r\n  }\r\n\r\n  async sendChatMessage(sessionId: string, message: ChatInput): Promise<ChatResponse> {\r\n    const response = await this.client.post<ChatResponse>(\r\n      `/chat/sessions/${sessionId}/messages`,\r\n      message\r\n    );\r\n    return response.data;\r\n  }\r\n\r\n  // Knowledge API\r\n  async uploadKnowledgeDocument(file: File): Promise<{ message: string }> {\r\n    const formData = new FormData();\r\n    formData.append('document', file);\r\n    \r\n    const response = await this.client.post<{ message: string }>(\r\n      '/knowledge/upload',\r\n      formData,\r\n      {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  }\r\n}\r\n\r\n// Create and export a singleton instance\r\nexport const apiClient = new ApiClient();\r\n\r\n// Export individual methods for convenience\r\nexport const {\r\n  getHealth,\r\n  getProfile,\r\n  updateProfile,\r\n  uploadProfilePicture,\r\n  uploadResume,\r\n  createRecommendation,\r\n  searchJobs,\r\n  createRoadmap,\r\n  updateRoadmapTask,\r\n  getChatSessions,\r\n  createChatSession,\r\n  getChatSession,\r\n  sendChatMessage,\r\n  uploadKnowledgeDocument,\r\n} = apiClient;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}